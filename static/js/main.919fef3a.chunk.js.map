{"version":3,"sources":["images/BB8Loading.gif","images/LightsaberCross.png","images/not-favorite-ds.svg","images/favorited-ds.svg","images/inactiveHamMenu.png","images/activeHamMenu.png","images/JediOrderCrest.png","ApiCalls/apiCalls.js","Components/Home/Home.js","Components/Form/Form.js","Components/MoviePlanet/MoviePlanet.js","Components/MoviesContainer/MoviesContainer.js","Components/MovieModal/MovieModal.js","Components/FilmsList/FilmsList.js","Components/Character/Character.js","Components/ScrollingText/ScrollingText.js","Components/CharactersContainer/CharactersContainer.js","Components/FavoriteCharacters/FavoriteCharacters.js","Components/UserProfile/UserProfile.js","Components/App/App.js","index.js"],"names":["module","exports","getAllMovies","fetch","then","res","json","catch","err","console","log","fetchCharacter","character","fetchSpecies","url","lifeForm","name","fetchAllCharacterData","speciesUrl","homeworldUrl","films","speciesData","homeworldData","home","homeName","homePopulation","population","filmsData","allFilmUrls","allFilms","map","film","title","Promise","all","fetchAllFilms","Home","Form","handleChange","event","setState","target","value","handleSubmit","state","length","favQuote","props","handleFormSubmit","history","push","error","ranking","className","htmlFor","id","type","placeholder","onChange","this","onClick","React","Component","withRouter","MoviePlanet","movie","updateCurrentMovie","resetMovieState","key","MoviesContainer","movies","updatePlanetModalState","reactModal","moviePlanets","sort","a","b","sortMovies","episode_id","releaseDate","release_date","index","MovieModal","currentMovie","src","lightsaberClose","alt","to","FilmsList","filmsToLi","Character","characterInfo","updateCharacterFavorite","species","homeworld","characterid","favorite","favorited","notFavorited","favoriteCharacter","ScrollingText","episode","opening_crawl","CharactersContainer","addFavoriteCharacter","checkFavoriteStatus","componentDidMount","fetchCharacters","characters","response","createCharacterCard","characterCards","parseInt","split","splice","pop","tenCharacters","slice","remainingCharacters","updatedCharacters","characterIndex","indexOf","BB8Loading","FavoriteCharacters","UserProfile","isOpen","userName","userFavQuote","userRanking","updateUserMenuState","userLogoutReset","favoriteCharacters","activeHamMenu","inactiveHamMenu","ReactModal","setAppElement","App","moviedata","allMovies","results","newArr","removeFavorite","includes","hideFormModal","showFormModal","showPlanetModal","showUserMenu","exact","path","onRequestClose","style","overlay","content","contentLabel","overlayClassName","component","position","top","left","right","bottom","backgroundColor","render","extact","match","params","find","ReactDOM","document","getElementById"],"mappings":"mHAAAA,EAAOC,QAAU,IAA0B,wC,kECA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,uPCA3CD,EAAOC,QAAU,IAA0B,4C,2KCA9BC,EAAe,WAC1B,OAAOC,MAAM,+BACVC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAGjBG,EAAiB,SAAAC,GAC5B,OAAOT,MAAMS,GACVR,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAGjBK,EAAe,SAAAC,GAC1B,OAAKA,EAGIX,MAAMW,GACVV,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAW,GAAQ,OAAIA,EAASC,QAC1BT,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MALrB,wBA0BES,EAAwB,SAACC,EAAYC,EAAcC,GAC9D,IAAIC,EAAcR,EAAY,WAAZ,cAAgBK,IAC9BI,EAlBGnB,MAkB4BgB,GAjBhCf,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAmB,GAAI,MAAK,CAAEC,SAAUD,EAAKP,KAAMS,eAAgBF,EAAKG,eAC1DnB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAgBxBmB,EAbuB,SAAAC,GAC3B,IAAMC,EAAWD,EAAYE,KAAI,SAAAC,GAC/B,OAAO5B,MAAM4B,GACV3B,MAAK,SAAA2B,GAAI,OAAIA,EAAKzB,UAClBF,MAAK,SAAA2B,GAAI,OAAIA,EAAKC,SAClBzB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SAE9B,OAAOyB,QAAQC,IAAIL,GAMHM,CAAcf,GAE9B,OAAOa,QAAQC,IAAI,CAACb,EAAaC,EAAeK,K,OCtCnCS,G,MAJF,WACX,OAAO,gC,QCAIC,G,MAAb,YACE,aAAe,IAAD,8BACZ,+CASFC,aAAe,SAAAC,GACb,EAAKC,SAAL,eAAiBD,EAAME,OAAOzB,KAAOuB,EAAME,OAAOC,SAXtC,EAcdC,aAAe,WACT,EAAKC,MAAM5B,KAAK6B,QAAU,EAAKD,MAAME,SAASD,QAChD,EAAKE,MAAMC,iBAAiB,EAAKJ,OACjC,EAAKG,MAAME,QAAQC,KAAK,YAExB,EAAKV,SAAS,CAAEW,OAAO,KAjBzB,EAAKP,MAAQ,CACX5B,KAAM,GACN8B,SAAU,GACVM,QAAS,SACTD,OAAO,GANG,EADhB,sEAwBY,IAAD,OACP,OACE,0BAAME,UAAU,QACd,2BAAOC,QAAQ,OAAOD,UAAU,sBAAhC,QAGA,2BACEA,UAAU,qBACVE,GAAG,OACHC,KAAK,OACLxC,KAAK,OACLyC,YAAY,OACZC,SAAUC,KAAKrB,aACfI,MAAOiB,KAAKf,MAAM5B,OAEpB,2BAAOsC,QAAQ,WAAWD,UAAU,sBAApC,kBAGA,2BACEA,UAAU,qBACVE,GAAG,WACHC,KAAK,OACLxC,KAAK,WACLyC,YAAY,gCACZC,SAAUC,KAAKrB,aACfI,MAAOiB,KAAKf,MAAME,WAEpB,2BAAOQ,QAAQ,UAAUD,UAAU,sBAAnC,sBAGA,4BACEE,GAAG,UACHvC,KAAK,UACLqC,UAAU,sBACVK,SAAUC,KAAKrB,cAEf,4BAAQI,MAAM,UAAd,UACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,UAAd,WAEF,4BACEc,KAAK,SACLH,UAAU,mBACVO,QAAS,kBAAM,EAAKjB,iBAHtB,UAOCgB,KAAKf,MAAMO,OACV,0DAC6B,6BAD7B,kCAxEV,GAA0BU,IAAMC,YAiFjBC,cAAW1B,G,iBC9DX2B,G,MApBK,SAAC,GAKd,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,mBAEAb,GACI,EAFJc,gBAEI,EADJd,WAGA,OACE,yBACEe,IAAKH,EAAMV,GACXF,UAAS,4BAAuBA,GAChCO,QAAS,WACPM,EAAmBD,KAGrB,wBAAIZ,UAAU,gBATW,CAAC,IAAK,KAAM,MAAO,KAAM,IAAK,KAAM,OASRY,EAAMV,GAAK,OCiCvDc,G,MA/CS,SAAC,GAMlB,IALLC,EAKI,EALJA,OACAC,EAII,EAJJA,uBACAC,EAGI,EAHJA,WACAN,EAEI,EAFJA,mBACAC,EACI,EADJA,gBAoBMM,EAlBa,SAAAH,GACjB,OAAOA,EAAOI,MAAK,SAACC,EAAGC,GACrB,OAAOD,EAAEpB,GAAKqB,EAAErB,MAaXsB,CARSP,EAAOxC,KAAI,SAAAmC,GACzB,MAAO,CACLjC,MAAOiC,EAAMjC,MACbuB,GAAIU,EAAMa,WACVC,YAAad,EAAMe,aACnBlE,IAAKmD,EAAMnD,SAMyBgB,KAAI,SAACmC,EAAOgB,GACpD,OACE,kBAAC,EAAD,CACE5B,UAAS,iCAA4B4B,EAAQ,GAC7ChB,MAAOA,EACPG,IAAKa,EACLV,uBAAwBA,EACxBL,mBAAoBA,EACpBC,gBAAiBA,OAKvB,OACE,yBAAKd,UAAU,mBACb,wBAAIA,UAAU,iCAAd,YACA,yBAAKA,UAAU,2BAA2BoB,GACzCD,K,gCCZQU,EA7BI,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,aAAcZ,EAA6B,EAA7BA,uBAC1BvC,EAAgCmD,EAAhCnD,MAAOuB,EAAyB4B,EAAzB5B,GAAIwB,EAAqBI,EAArBJ,YAAqBI,EAARrE,IAChC,OACE,yBAAKuC,UAAU,uBACb,yBAAKA,UAAU,4BACb,2BACEG,KAAK,QACL4B,IAAKC,IACLC,IAAI,8BACJjC,UAAU,yBACVO,QAASW,KAGb,wBAAIlB,UAAU,kBAAkBrB,GAChC,wBAAIqB,UAAU,kBAAd,YAAyCE,GACzC,wBAAIF,UAAU,kBAAd,gBAA4C,6BAA5C,IAAmD0B,GACnD,kBAAC,IAAD,CAAMQ,GAAE,kBAAahC,IACnB,4BACEC,KAAK,SACLH,UAAU,8BACVO,QAASW,GAHX,sB,gDCHOiB,G,MAfG,SAAC,GAAe,IAC1BC,EADyB,EAAZrE,MACKU,KAAI,SAACC,EAAMkD,GAAP,OAC1B,wBAAI5B,UAAU,SAASe,IAAKa,GACzBlD,MAIL,OACE,wBAAIsB,UAAU,UACZ,wBAAIA,UAAU,UAAd,iBACCoC,KC6BQC,EApCG,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,wBAClC,OAAOD,EAAc7D,KAAK,SAAClB,GAAe,IAChCI,EAA2DJ,EAA3DI,KAAM6E,EAAqDjF,EAArDiF,QAASC,EAA4ClF,EAA5CkF,UAAW1E,EAAiCR,EAAjCQ,MAAO2E,EAA0BnF,EAA1BmF,YAAaC,EAAapF,EAAboF,SAetD,OACE,yBAAK3C,UAAU,YAAYe,IAAK2B,GAC9B,2BACE1C,UAAU,eACVG,KAAK,QACL8B,IAAI,eACJF,IAAKY,EAAWC,IAAYC,IAC5BtC,QAAS,kBAAMgC,EArBK,SAAAhF,GAAc,IAEpCI,EAMEJ,EANFI,KACA6E,EAKEjF,EALFiF,QACAC,EAIElF,EAJFkF,UACA1E,EAGER,EAHFQ,MACA2E,EAEEnF,EAFFmF,YACAC,EACEpF,EADFoF,SAGF,MAAO,CAAEhF,OAAM6E,UAASC,YAAW1E,QAAO2E,cAAaC,SADvDA,GAAYA,GAY+BG,CAAkBvF,OAE3D,qCAAWI,GACX,uCAAa6E,GACb,yCAAeC,EAAUtE,UACzB,oDAA0BsE,EAAUrE,gBACnC,kBAAC,EAAD,CAAWL,MAAOA,SCjBZgF,G,MAjBO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OACE,yBAAKhD,UAAU,QACb,6BAASA,UAAU,kBACjB,yBAAKA,UAAU,SACb,yBAAKA,UAAU,+BACb,uCACWgD,EAAQvB,WADnB,IACgCuB,EAAQrE,QAG1C,4BAAKqE,EAAQC,oB,iBCNFC,E,YACnB,cAAqE,IAAD,EAAtDF,EAAsD,EAAtDA,QAASG,EAA6C,EAA7CA,qBAAsBC,EAAuB,EAAvBA,oBAAuB,4BAClE,+CAUFC,kBAXoE,sBAWhD,4BAAA/B,EAAA,6DACZgC,EAAkB,EAAK/D,MAAMyD,QAAQO,WAAW9E,KAAI,SAAAlB,GACxD,OAAOD,EAAeC,GAAWR,MAAK,SAAAQ,GAAc,IAC1CI,EAAyCJ,EAAzCI,KAAM8E,EAAmClF,EAAnCkF,UAAWD,EAAwBjF,EAAxBiF,QAASzE,EAAeR,EAAfQ,MAAON,EAAQF,EAARE,IACzC,OAAOG,EAAsB4E,EAASC,EAAW1E,GAC9ChB,MAAK,SAAAyG,GAAQ,MAAK,CAAE7F,OAAM6F,WAAU/F,UACpCP,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,YANd,kBASXyB,QAAQC,IAAIyE,GAAiBvG,MAAK,SAAAwG,GAAU,OACjD,EAAKE,oBAAoBF,OAVT,2CAXgD,EAyBpEE,oBAAsB,SAAAF,GACpB,IAAMG,EAAiBH,EAAW9E,KAAI,SAAAlB,GACpC,MAAO,CACLI,KAAMJ,EAAUI,KAChB6E,QAASjF,EAAUiG,SAAS,GAC5Bf,UAAWlF,EAAUiG,SAAS,GAC9BzF,MAAOR,EAAUiG,SAAS,GAC1Bd,YAAaiB,SACXpG,EAAUE,IACPmG,MAAM,KACNC,OAAO,EAAG,GACVC,OAELnB,SAAU,EAAKS,oBACbO,SACEpG,EAAUE,IACPmG,MAAM,KACNC,OAAO,EAAG,GACVC,YAKLC,EAAgBL,EAAeM,MAAM,EAAG,IACxCC,EAAsBP,EAAeM,MAAM,IACjD,EAAK7E,SAAS,CACZoE,WAAYQ,EACZE,oBAAqBA,KApD2C,EAwDpE1B,wBAA0B,SAAAO,GACxB,IAAMoB,EAAoB,EAAK3E,MAAMgE,WAC/BY,EAAiBD,EACpBzF,KAAI,SAAAlB,GAAS,OAAIA,EAAUmF,eAC3B0B,QAAQtB,EAAkBJ,aAC7BwB,EAAkBL,OAAOM,EAAgB,EAAGrB,GAC5C,EAAK3D,SAAS,CAAEoE,WAAYW,IAC5B,EAAKf,qBAAqBL,IA7D1B,EAAKK,qBAAuBA,EAC5B,EAAKC,oBAAsBA,EAC3B,EAAK7D,MAAQ,CACXyD,UACAO,WAAY,GACZU,oBAAqB,IAP2C,E,sEAmElE,OACE,yBAAKjE,UAAU,uBACb,kBAAC,EAAD,CAAegD,QAAS1C,KAAKf,MAAMyD,UACnC,wBAAIhD,UAAU,gBAAgBM,KAAKf,MAAMyD,QAAQrE,OACjD,6BAASqB,UAAU,+BACiB,IAAjCM,KAAKf,MAAMgE,WAAW/D,OACrB,yBAAKQ,UAAU,yBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,gBACb,kDACA,yBACE+B,IAAKsC,IACLpC,IAAI,cACJjC,UAAU,+BAMlB,kBAAC,EAAD,CACEsC,cAAehC,KAAKf,MAAMgE,WAC1BhB,wBAAyBjC,KAAKiC,gC,GAzFK/B,IAAMC,WC0BxC6D,G,MAzBY,SAAC,GAA4C,IAA1ChC,EAAyC,EAAzCA,cAAea,EAA0B,EAA1BA,qBAE3C,OACE,yBAAKnD,UAAU,sBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,yBACb,kBAAC,IAAD,CAAMkC,GAAG,WACP,yBAAKlC,UAAU,sBAEjB,kBAAC,IAAD,CAAMkC,GAAG,WACP,4BACA/B,KAAK,SACLH,UAAU,gBAFV,2BAMN,wBAAIA,UAAU,aAAd,wBACD,6BAASA,UAAU,+BACjBsC,EAAc9C,OAAU,kBAAC,EAAD,CAAW8C,cAAeA,EAAeC,wBAAyBY,IAA2B,wBAAInD,UAAU,aAAd,gC,0CCgD7GuE,EApEK,SAAC,GAQd,IAPLC,EAOI,EAPJA,OACAC,EAMI,EANJA,SACAC,EAKI,EALJA,aACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,oBACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,mBAEA,OACE,yBAAK9E,UAAU,eACb,yBAAKA,UAAU,yBACb,wBACEA,UAAU,wBACVO,QAAS,kBAAMqE,MAEdH,GAEH,2BACEtE,KAAK,QACL8B,IAAI,kCACJF,IAAKyC,EAASO,IAAgBC,IAC9BhF,UAAU,8BACVO,QAASqE,KAGZJ,EACC,yBAAKxE,UAAU,kBACb,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAMkC,GAAG,wBACP,4BACE/B,KAAK,SACLH,UAAU,8BACVO,QAASqE,GAER,IACAE,EAAmBtF,OANtB,yBASF,kBAAC,IAAD,CAAM0C,GAAG,wBACP,yBAAKlC,UAAU,gBAGnB,wBAAIA,UAAU,qBAAd,IAAoC0E,EAApC,KACA,wBAAI1E,UAAU,qBAAd,YAA4C2E,GAC5C,yBAAK3E,UAAU,oBACb,kBAAC,IAAD,CAAMkC,GAAG,KACP,yBAAKlC,UAAU,sBAEjB,kBAAC,IAAD,CAAMkC,GAAG,KACP,4BACE/B,KAAK,SACLH,UAAU,gCACVO,QAAS,WACPsE,IACAD,MALJ,eAaJ,O,YCvD2BK,IAAWC,cAAc,S,IAEzCC,E,YACnB,aAAe,IAAD,8BACZ,+CAcF9B,kBAfc,sBAeM,sBAAA/B,EAAA,sDAClBzE,IACGE,MAAK,SAAAqI,GAAS,OAAI,EAAKjG,SAAS,CAAEkG,UAAWD,EAAUE,aACvDpI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAHV,2CAfN,EAqBdgG,qBAAuB,SAAA5F,GACrB,IAAMgI,EAAM,YAAO,EAAKhG,MAAMuF,oBACzBvH,EAAUoF,UAGb4C,EAAO1F,KAAKtC,GACZ,EAAK4B,SAAS,CAAE2F,mBAAoBS,KAHpC,EAAKC,eAAejI,EAAWgI,IAxBrB,EA+BdC,eAAiB,SAACjI,EAAWgI,GAC3B,IAAMpB,EAAiBoB,EACpB9G,KAAI,SAAAlB,GAAS,OAAIA,EAAUmF,eAC3B0B,QAAQ7G,EAAUmF,aACrB6C,EAAO1B,OAAOM,EAAgB,GAC9B,EAAKhF,SAAS,CAAE2F,mBAAoBS,KApCxB,EAuCdnC,oBAAsB,SAAAlD,GACpB,OAAO,EAAKX,MAAMuF,mBACfrG,KAAI,SAAAlB,GAAS,OAAIA,EAAUmF,eAC3B+C,SAASvF,IA1CA,EA6CdP,iBAAmB,YAAkC,IAA/BhC,EAA8B,EAA9BA,KAAM8B,EAAwB,EAAxBA,SAAUM,EAAc,EAAdA,QACpC,EAAKZ,SAAS,CAAExB,OAAM8B,WAAUM,YAChC,EAAK2F,iBA/CO,EAkDd5E,gBAAkB,WAChB,EAAK3B,SAAS,CAAE2C,aAAc,MAnDlB,EAsDd4D,cAAgB,WACd,EAAKvG,SAAS,CAAEwG,eAAe,KAvDnB,EA0DdzE,uBAAyB,WACvB,EAAK/B,SAAS,CAAEyG,iBAAkB,EAAKrG,MAAMqG,mBA3DjC,EA8DdhB,oBAAsB,WACpB,EAAKzF,SAAS,CAAE0G,cAAe,EAAKtG,MAAMsG,gBA/D9B,EAkEdhF,mBAAqB,SAAAD,GACnB,EAAKzB,SAAS,CAAE2C,aAAclB,GAAS,EAAKM,2BAnEhC,EAsEd2D,gBAAkB,WAChB,EAAK1F,SAAS,CACZwG,eAAe,EACfC,iBAAiB,EACjBC,cAAc,EACdlI,KAAM,GACN8B,SAAU,GACVM,QAAS,GACT+E,mBAAoB,GACpBhD,aAAc,MA7EhB,EAAKvC,MAAQ,CACXoG,eAAe,EACfC,iBAAiB,EACjBC,cAAc,EACdlI,KAAM,GACN8B,SAAU,GACVM,QAAS,GACT+E,mBAAoB,GACpBO,UAAW,GACXvD,aAAc,IAXJ,E,sEAmFJ,IAAD,OACP,OACE,yBAAK9B,UAAU,OACb,kBAAC,EAAD,CACEwE,OAAQlE,KAAKf,MAAMsG,aACnBpB,SAAUnE,KAAKf,MAAM5B,KACrB+G,aAAcpE,KAAKf,MAAME,SACzBkF,YAAarE,KAAKf,MAAMQ,QACxB6E,oBAAqBtE,KAAKsE,oBAC1BC,gBAAiBvE,KAAKuE,gBACtBC,mBAAoBxE,KAAKf,MAAMuF,qBAEjC,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,KAChB,kBAAC,IAAD,CACEvB,OAAQlE,KAAKf,MAAMoG,cACnBK,eAAgB1F,KAAKX,iBACrBsG,MAAO,CAAEC,QAAS,GAAIC,QAAS,IAC/BC,aAAa,eACbpG,UAAU,mBACVqG,iBAAiB,sBAEjB,kBAAC,EAAD,CACE1G,iBAAkBW,KAAKX,iBACvBC,QAASU,KAAKZ,MAAME,YAI1B,kBAAC,IAAD,CAAOkG,OAAK,EAACC,KAAK,IAAIO,UAAWvH,IACjC,kBAAC,IAAD,CACEyF,OAAQlE,KAAKf,MAAMqG,gBACnBK,MAAO,CACLC,QAAS,CACPK,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,gBAAiB,6BAEnBT,QAAS,IAEXnG,UAAU,aACVqG,iBAAiB,qBAEjB,kBAAC,EAAD,CACEvE,aAAcxB,KAAKf,MAAMuC,aACzBZ,uBAAwBZ,KAAKY,0BAGjC,kBAAC,IAAD,CACE4E,OAAK,EACLC,KAAK,UACLc,OAAQ,kBAC0B,IAAhC,EAAKtH,MAAM8F,UAAU7F,OACnB,yBACEuC,IAAKsC,IACLpC,IAAI,cACJjC,UAAU,4BAGZ,kBAAC,EAAD,CACEiB,OAAQ,EAAK1B,MAAM8F,UACnBnE,uBAAwB,EAAKA,uBAC7BL,mBAAoB,EAAKA,mBACzBb,UAAU,kBACVc,gBAAiB,EAAKA,qBAK9B,kBAAC,IAAD,CAAOgF,OAAK,EAACC,KAAK,uBAAuBO,UAAWhC,GAClD,kBAAC,EAAD,CACEhC,cAAehC,KAAKf,MAAMuF,mBAC1B3B,qBAAsB7C,KAAK6C,wBAG/B,kBAAC,IAAD,CACE2D,QAAM,EACNf,KAAK,cACLc,OAAQ,YAAgB,IAAbE,EAAY,EAAZA,MACH7G,EAAKyD,SAASoD,EAAMC,OAAO9G,IAC3B8C,EAAU,EAAKzD,MAAM8F,UAAU4B,MACnC,SAAAjE,GAAO,OAAIA,EAAQvB,aAAevB,KAEpC,OACE,oCACE,kBAAC,EAAD,CACE8C,QAASA,EACTG,qBAAsB,EAAKA,qBAC3BC,oBAAqB,EAAKA,+B,GA7KX5C,IAAMC,WCVvCyG,IAASL,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFM,SAASC,eAAe,W","file":"static/js/main.919fef3a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BB8Loading.4267e5b5.gif\";","module.exports = __webpack_public_path__ + \"static/media/LightsaberCross.0f7e8af5.png\";","module.exports = __webpack_public_path__ + \"static/media/not-favorite-ds.4f7eceea.svg\";","module.exports = __webpack_public_path__ + \"static/media/favorited-ds.a8396881.svg\";","module.exports = __webpack_public_path__ + \"static/media/inactiveHamMenu.a8bf7fdd.png\";","module.exports = __webpack_public_path__ + \"static/media/activeHamMenu.41cc740c.png\";","module.exports = __webpack_public_path__ + \"static/media/JediOrderCrest.005d62cf.png\";","export const getAllMovies = () => {\n  return fetch(\"https://swapi.co/api/films/\")\n    .then(res => res.json())\n    .catch(err => console.log(err));\n};\n\nexport const fetchCharacter = character => {\n  return fetch(character)\n    .then(res => res.json())\n    .catch(err => console.log(err));\n};\n\nexport const fetchSpecies = url => {\n  if (!url) {\n    return \"NO SPECIES AVAILABLE\";\n  } else {\n    return fetch(url)\n      .then(res => res.json())\n      .then(lifeForm => lifeForm.name)\n      .catch(err => console.log(err));\n  }\n};\n\nexport const fetchHomeworld = url => {\n  return fetch(url)\n    .then(res => res.json())\n    .then(home => ({ homeName: home.name, homePopulation: home.population }))\n    .catch(err => console.log(err));\n};\n\nexport const fetchAllFilms = allFilmUrls => {\n  const allFilms = allFilmUrls.map(film => {\n    return fetch(film)\n      .then(film => film.json())\n      .then(film => film.title)\n      .catch(err => console.log(err));\n  });\n  return Promise.all(allFilms);\n};\n\nexport const fetchAllCharacterData = (speciesUrl, homeworldUrl, films) => {\n  let speciesData = fetchSpecies(...speciesUrl);\n  let homeworldData = fetchHomeworld(homeworldUrl);\n  let filmsData = fetchAllFilms(films);\n\n  return Promise.all([speciesData, homeworldData, filmsData]);\n};\n","import React from \"react\";\nimport \"./Home.css\";\n\nconst Home = () => {\n  return <div></div>;\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport \"./Form.css\";\n\nexport class Form extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      favQuote: \"\",\n      ranking: \"Novice\",\n      error: false\n    };\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = () => {\n    if (this.state.name.length && this.state.favQuote.length) {\n      this.props.handleFormSubmit(this.state);\n      this.props.history.push(\"/movies\");\n    } else {\n      this.setState({ error: true });\n    }\n  };\n\n  render() {\n    return (\n      <form className=\"Form\">\n        <label htmlFor=\"name\" className=\"UserModalFormLabel\">\n          Name\n        </label>\n        <input\n          className=\"UserModalFormInput\"\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          onChange={this.handleChange}\n          value={this.state.name}\n        />\n        <label htmlFor=\"favQuote\" className=\"UserModalFormLabel\">\n          Favorite Quote\n        </label>\n        <input\n          className=\"UserModalFormInput\"\n          id=\"favQuote\"\n          type=\"text\"\n          name=\"favQuote\"\n          placeholder=\"Favorite quote from the films\"\n          onChange={this.handleChange}\n          value={this.state.favQuote}\n        />\n        <label htmlFor=\"ranking\" className=\"UserModalFormLabel\">\n          Select Fan Ranking\n        </label>\n        <select\n          id=\"ranking\"\n          name=\"ranking\"\n          className=\"UserModalFormSelect\"\n          onChange={this.handleChange}\n        >\n          <option value=\"Novice\">Novice</option>\n          <option value=\"Intermediate\">Intermediate</option>\n          <option value=\"Expert\">Expert</option>\n        </select>\n        <button\n          type=\"button\"\n          className=\"UserModalFormBtn\"\n          onClick={() => this.handleSubmit()}\n        >\n          Submit\n        </button>\n        {this.state.error && (\n          <h3>\n            The Force Is Not With You! <br /> Please Complete The Form\n          </h3>\n        )}\n      </form>\n    );\n  }\n}\n\nexport default withRouter(Form);\n","import React from \"react\";\nimport \"./MoviePlanet.css\";\n\nconst MoviePlanet = ({\n  movie,\n  updateCurrentMovie,\n  resetMovieState,\n  className\n}) => {\n  let convertToRomanNumerals = [\"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\"];\n  return (\n    <div\n      key={movie.id}\n      className={`planetImage planet${className}`}\n      onClick={() => {\n        updateCurrentMovie(movie);\n      }}\n    >\n      <h1 className=\"planetNumber\">{convertToRomanNumerals[movie.id - 1]}</h1>\n    </div>\n  );\n};\n\nexport default MoviePlanet;\n","import React from \"react\";\nimport MoviePlanet from \"../MoviePlanet/MoviePlanet\";\nimport \"./MoviesContainer.css\";\n\nconst MoviesContainer = ({\n  movies,\n  updatePlanetModalState,\n  reactModal,\n  updateCurrentMovie,\n  resetMovieState\n}) => {\n  const sortMovies = movies => {\n    return movies.sort((a, b) => {\n      return a.id - b.id;\n    });\n  };\n\n  const createMovieObjects = () => {\n    const planets = movies.map(movie => {\n      return {\n        title: movie.title,\n        id: movie.episode_id,\n        releaseDate: movie.release_date,\n        url: movie.url\n      };\n    });\n    return sortMovies(planets);\n  };\n\n  const moviePlanets = createMovieObjects().map((movie, index) => {\n    return (\n      <MoviePlanet\n        className={`planetImage planetImage${index + 1}`}\n        movie={movie}\n        key={index}\n        updatePlanetModalState={updatePlanetModalState}\n        updateCurrentMovie={updateCurrentMovie}\n        resetMovieState={resetMovieState}\n      />\n    );\n  });\n\n  return (\n    <div className=\"MoviesContainer\">\n      <h1 className=\"MoviesContainer__h1--Episodes\">Episodes</h1>\n      <div className=\"MoviesContainer-planets\">{moviePlanets}</div>\n      {reactModal}\n    </div>\n  );\n};\n\nexport default MoviesContainer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./MovieModal.css\";\nimport lightsaberClose from \"../../images/LightsaberCross.png\";\n\nconst MovieModal = ({ currentMovie, updatePlanetModalState }) => {\n  const { title, id, releaseDate, url } = currentMovie;\n  return (\n    <div className=\"MovieModalContainer\">\n      <div className='MovieModalContainer__div'>\n        <input\n          type=\"image\"\n          src={lightsaberClose}\n          alt=\"Crossed lightsabers - close\"\n          className=\"MovieModal__btn--close\"\n          onClick={updatePlanetModalState}\n        />\n      </div>\n      <h1 className=\"MovieModal__h1\">{title}</h1>\n      <h3 className=\"MovieModal__h3\">Episode: {id}</h3>\n      <h5 className=\"MovieModal__h5\">Release Date:<br/> {releaseDate}</h5>\n      <Link to={`/movies/${id}`}>\n        <button\n          type=\"button\"\n          className=\"MovieModal__btn--characters\"\n          onClick={updatePlanetModalState}\n        >\n          View Characters\n        </button>\n      </Link>\n    </div>\n  );\n};\n\nexport default MovieModal;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./FilmsList.css\";\n\nconst FilmsList = ({ films }) => {\n  const filmsToLi = films.map((film, index) => (\n    <li className=\"filmLi\" key={index}>\n      {film}\n    </li>\n  ));\n\n  return (\n    <ul className=\"filmUl\">\n      <li className=\"filmLi\">Also Seen In:</li>\n      {filmsToLi}\n    </ul>\n  );\n};\n\nexport default FilmsList;\n","import React from \"react\";\nimport \"./Character.css\";\nimport \"../CharactersContainer/CharactersContainer.css\"\nimport notFavorited from '../../images/not-favorite-ds.svg'\nimport favorited from '../../images/favorited-ds.svg'\nimport FilmsList from '../FilmsList/FilmsList'\n\nconst Character = ({ characterInfo, updateCharacterFavorite }) => {\n  return characterInfo.map( (character) => {\n    const { name, species, homeworld, films, characterid, favorite } = character\n    const favoriteCharacter = character => {\n      let {\n        name,\n        species,\n        homeworld,\n        films,\n        characterid,\n        favorite\n      } = character;\n      favorite = !favorite;\n      return { name, species, homeworld, films, characterid, favorite };\n    };\n\n    \n    return (\n      <div className=\"Character\" key={characterid}>\n        <input \n          className='favoriteIcon'\n          type='image' \n          alt='favoriteIcon' \n          src={favorite ? favorited : notFavorited} \n          onClick={() => updateCharacterFavorite(favoriteCharacter(character))}\n        />\n        <h1>Name: {name}</h1>\n        <p>Species: {species}</p>\n        <p>Homeworld: {homeworld.homeName}</p>\n        <p>Homeworld Population: {homeworld.homePopulation}</p>\n        {<FilmsList films={films}/>}\n      </div>\n    );\n  });\n};\n\nexport default Character;\n","import React from \"react\";\nimport \"./ScrollingText.css\";\n\nconst ScrollingText = ({ episode }) => {\n  return (\n    <div className=\"body\">\n      <section className=\"scrolling-Text\">\n        <div className=\"crawl\">\n          <div className=\"scrollingText--Episode-info\">\n            <h1>\n              Episode {episode.episode_id} {episode.title}\n            </h1>\n          </div>\n          <h1>{episode.opening_crawl}</h1>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default ScrollingText;\n","import React from \"react\";\nimport Character from \"../Character/Character\";\nimport ScrollingText from \"../ScrollingText/ScrollingText\";\nimport BB8Loading from \"../../../src/images/BB8Loading.gif\";\nimport \"./CharactersContainer.css\";\nimport { fetchCharacter, fetchAllCharacterData } from \"../../ApiCalls/apiCalls\";\n\nexport default class CharactersContainer extends React.Component {\n  constructor({ episode, addFavoriteCharacter, checkFavoriteStatus }) {\n    super();\n    this.addFavoriteCharacter = addFavoriteCharacter;\n    this.checkFavoriteStatus = checkFavoriteStatus;\n    this.state = {\n      episode,\n      characters: [],\n      remainingCharacters: []\n    };\n  }\n\n  componentDidMount = async () => {\n    const fetchCharacters = this.state.episode.characters.map(character => {\n      return fetchCharacter(character).then(character => {\n        const { name, homeworld, species, films, url } = character;\n        return fetchAllCharacterData(species, homeworld, films)\n          .then(response => ({ name, response, url }))\n          .catch(err => console.log(err));\n      });\n    });\n    return Promise.all(fetchCharacters).then(characters =>\n      this.createCharacterCard(characters)\n    );\n  };\n\n  createCharacterCard = characters => {\n    const characterCards = characters.map(character => {\n      return {\n        name: character.name,\n        species: character.response[0],\n        homeworld: character.response[1],\n        films: character.response[2],\n        characterid: parseInt(\n          character.url\n            .split(\"/\")\n            .splice(5, 1)\n            .pop()\n        ),\n        favorite: this.checkFavoriteStatus(\n          parseInt(\n            character.url\n              .split(\"/\")\n              .splice(5, 1)\n              .pop()\n          )\n        )\n      };\n    });\n    const tenCharacters = characterCards.slice(0, 10);\n    const remainingCharacters = characterCards.slice(11);\n    this.setState({\n      characters: tenCharacters,\n      remainingCharacters: remainingCharacters\n    });\n  };\n\n  updateCharacterFavorite = favoriteCharacter => {\n    const updatedCharacters = this.state.characters;\n    const characterIndex = updatedCharacters\n      .map(character => character.characterid)\n      .indexOf(favoriteCharacter.characterid);\n    updatedCharacters.splice(characterIndex, 1, favoriteCharacter);\n    this.setState({ characters: updatedCharacters });\n    this.addFavoriteCharacter(favoriteCharacter);\n  };\n\n  render() {\n    return (\n      <div className=\"CharactersContainer\">\n        <ScrollingText episode={this.state.episode} />\n        <h1 className=\"episodeTitle\">{this.state.episode.title}</h1>\n        <section className=\"CharactersContainer-section\">\n          {this.state.characters.length === 0 ? (\n            <div className=\"BB8--Parent-Container\">\n              <div className=\"BB8\">\n                <div className=\"BB8--loading\">\n                  <h1>Loading Characters</h1>\n                  <img\n                    src={BB8Loading}\n                    alt=\"Loading GIF\"\n                    className=\"MoviesContainer-loading\"\n                    />\n                </div>\n              </div>\n            </div>\n          ) : (\n            <Character\n              characterInfo={this.state.characters}\n              updateCharacterFavorite={this.updateCharacterFavorite}\n            />\n          )}\n        </section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport Character from '../Character/Character'\nimport '../Character/Character.css'\nimport './FavoriteCharacters.css'\nimport \"../CharactersContainer/CharactersContainer.css\"\n\n\nconst FavoriteCharacters = ({ characterInfo, addFavoriteCharacter}) => {\n\n  return (\n    <div className='FavoriteCharacters'>\n      <div className='toMoviesBtn__div'>\n        <div className='back--episodes--saber'>\n          <Link to=\"/movies\">\n            <div className='saberButt sbleft'></div>\n          </Link>\n          <Link to=\"/movies\">\n            <button \n            type='button'\n            className='backToMovies'>Back To All Episodes</button>\n          </Link>\n        </div>\n      </div>\n      <h3 className='noFavText'>Favorite Characters:</h3>\n     <section className=\"CharactersContainer-section\">\n     { characterInfo.length ?  <Character characterInfo={characterInfo} updateCharacterFavorite={addFavoriteCharacter} /> : <h3 className='noFavText'>No Character's Favorited</h3>\n     }\n     </section>\n    </div>\n  )\n}\n\nexport default FavoriteCharacters;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./UserProfile.css\";\nimport inactiveHamMenu from \"../../images/inactiveHamMenu.png\";\nimport activeHamMenu from \"../../images/activeHamMenu.png\";\n\nconst UserProfile = ({\n  isOpen,\n  userName,\n  userFavQuote,\n  userRanking,\n  updateUserMenuState,\n  userLogoutReset,\n  favoriteCharacters\n}) => {\n  return (\n    <div className=\"UserProfile\">\n      <div className=\"UserProfile--userMenu\">\n        <h1\n          className=\"UserProfile--userName\"\n          onClick={() => updateUserMenuState()}\n        >\n          {userName}\n        </h1>\n        <input\n          type=\"image\"\n          alt=\"User Profile Dropdown Menu Icon\"\n          src={isOpen ? activeHamMenu : inactiveHamMenu}\n          className=\"UserProfile__hamburger-icon\"\n          onClick={updateUserMenuState}\n        />\n      </div>\n      {isOpen ? (\n        <div className=\"drop-down-menu\">\n          <div className=\"fav-button-saber\">\n            <Link to=\"/favorite-characters\">\n              <button\n                type=\"button\"\n                className=\"UserProfile__fav-characters\"\n                onClick={updateUserMenuState}\n              >\n                {\" \"}\n                {favoriteCharacters.length} Favorite Characters\n              </button>\n            </Link>\n            <Link to=\"/favorite-characters\">\n              <div className=\"saberButt\"></div>\n            </Link>\n          </div>\n          <h5 className=\"user-profile-text\">\"{userFavQuote}\"</h5>\n          <h5 className=\"user-profile-text\">Ranking: {userRanking}</h5>\n          <div className=\"fav-button-saber\">\n            <Link to=\"/\">\n              <div className=\"saberButt sbleft\"></div>\n            </Link>\n            <Link to=\"/\">\n              <button\n                type=\"button\"\n                className=\"UserProfile__button--sign-out\"\n                onClick={() => {\n                  userLogoutReset();\n                  updateUserMenuState();\n                }}\n              >\n                Sign out\n              </button>\n            </Link>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default UserProfile;\n","import React from \"react\";\nimport { getAllMovies } from \"../../ApiCalls/apiCalls\";\nimport { Route, Link } from \"react-router-dom\";\nimport Home from \"../Home/Home\";\nimport Form from \"../Form/Form\";\nimport ReactModal from \"react-modal\";\nimport MoviesContainer from \"../MoviesContainer/MoviesContainer\";\nimport MovieModal from \"../MovieModal/MovieModal\";\nimport CharactersContainer from \"../CharactersContainer/CharactersContainer\";\nimport FavoriteCharacters from \"../FavoriteCharacters/FavoriteCharacters\";\nimport UserProfile from \"../UserProfile/UserProfile\";\nimport BB8Loading from \"../../images/BB8Loading.gif\";\nimport JediOrderCrest from \"../../../src/images/JediOrderCrest.png\"\nimport \"./App.css\";\nif (process.env.NODE_ENV !== \"test\") ReactModal.setAppElement(\"#root\");\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showFormModal: true,\n      showPlanetModal: false,\n      showUserMenu: false,\n      name: \"\",\n      favQuote: \"\",\n      ranking: \"\",\n      favoriteCharacters: [],\n      allMovies: [],\n      currentMovie: {}\n    };\n  }\n\n  componentDidMount = async () => {\n    getAllMovies()\n      .then(moviedata => this.setState({ allMovies: moviedata.results }))\n      .catch(err => console.log(err));\n  };\n\n  addFavoriteCharacter = character => {\n    const newArr = [...this.state.favoriteCharacters];\n    if (!character.favorite) {\n      this.removeFavorite(character, newArr);\n    } else {\n      newArr.push(character);\n      this.setState({ favoriteCharacters: newArr });\n    }\n  };\n\n  removeFavorite = (character, newArr) => {\n    const characterIndex = newArr\n      .map(character => character.characterid)\n      .indexOf(character.characterid);\n    newArr.splice(characterIndex, 1);\n    this.setState({ favoriteCharacters: newArr });\n  };\n\n  checkFavoriteStatus = id => {\n    return this.state.favoriteCharacters\n      .map(character => character.characterid)\n      .includes(id);\n  };\n\n  handleFormSubmit = ({ name, favQuote, ranking }) => {\n    this.setState({ name, favQuote, ranking });\n    this.hideFormModal();\n  };\n\n  resetMovieState = () => {\n    this.setState({ currentMovie: {} });\n  };\n\n  hideFormModal = () => {\n    this.setState({ showFormModal: false });\n  };\n\n  updatePlanetModalState = () => {\n    this.setState({ showPlanetModal: !this.state.showPlanetModal });\n  };\n\n  updateUserMenuState = () => {\n    this.setState({ showUserMenu: !this.state.showUserMenu });\n  };\n\n  updateCurrentMovie = movie => {\n    this.setState({ currentMovie: movie }, this.updatePlanetModalState());\n  };\n\n  userLogoutReset = () => {\n    this.setState({\n      showFormModal: true,\n      showPlanetModal: false,\n      showUserMenu: false,\n      name: \"\",\n      favQuote: \"\",\n      ranking: \"\",\n      favoriteCharacters: [],\n      currentMovie: {}\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <UserProfile\n          isOpen={this.state.showUserMenu}\n          userName={this.state.name}\n          userFavQuote={this.state.favQuote}\n          userRanking={this.state.ranking}\n          updateUserMenuState={this.updateUserMenuState}\n          userLogoutReset={this.userLogoutReset}\n          favoriteCharacters={this.state.favoriteCharacters}\n        />\n        <Route exact path=\"/\">\n          <ReactModal\n            isOpen={this.state.showFormModal}\n            onRequestClose={this.handleFormSubmit}\n            style={{ overlay: {}, content: {} }}\n            contentLabel=\"Welcome Form\"\n            className=\"WelcomeFormModal\"\n            overlayClassName=\"WelcomeFormOverlay\"\n          >\n            <Form\n              handleFormSubmit={this.handleFormSubmit}\n              history={this.props.history}\n            />\n          </ReactModal>\n        </Route>\n        <Route exact path=\"/\" component={Home} />\n        <ReactModal\n          isOpen={this.state.showPlanetModal}\n          style={{\n            overlay: {\n              position: \"fixed\",\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0,\n              backgroundColor: \"rgba(255, 255, 255, 0.75)\",\n            },\n            content: {}\n          }}\n          className=\"MovieModal\"\n          overlayClassName=\"MovieModalOverlay\"\n  >\n          <MovieModal\n            currentMovie={this.state.currentMovie}\n            updatePlanetModalState={this.updatePlanetModalState}\n          />\n        </ReactModal>\n        <Route\n          exact\n          path=\"/movies\"\n          render={() =>\n            this.state.allMovies.length === 0 ? (\n              <img\n                src={BB8Loading}\n                alt=\"Loading GIF\"\n                className=\"MoviesContainer-loading\"\n              />\n            ) : (\n              <MoviesContainer\n                movies={this.state.allMovies}\n                updatePlanetModalState={this.updatePlanetModalState}\n                updateCurrentMovie={this.updateCurrentMovie}\n                className=\"MoviesContainer\"\n                resetMovieState={this.resetMovieState}\n              />\n            )\n          }\n        />\n        <Route exact path=\"/favorite-characters\" component={FavoriteCharacters}>\n          <FavoriteCharacters\n            characterInfo={this.state.favoriteCharacters}\n            addFavoriteCharacter={this.addFavoriteCharacter}\n          />\n        </Route>\n        <Route\n          extact\n          path=\"/movies/:id\"\n          render={({ match }) => {\n            const id = parseInt(match.params.id);\n            const episode = this.state.allMovies.find(\n              episode => episode.episode_id === id\n            );\n            return (\n              <>\n                <CharactersContainer\n                  episode={episode}\n                  addFavoriteCharacter={this.addFavoriteCharacter}\n                  checkFavoriteStatus={this.checkFavoriteStatus}\n                />\n              </>\n            );\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"../src/Components/App/App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}